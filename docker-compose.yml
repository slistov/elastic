version: "2.2"

services:
  elastic:
    # depends_on:
    #   setup:
    #     condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    # volumes:
    #   - certs:/usr/share/elasticsearch/config/certs
    #   - esdata01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - discovery.type=single-node
      # - node.name=es01
      # - cluster.name=${CLUSTER_NAME}
      # - cluster.initial_master_nodes=es01
      # - discovery.seed_hosts=es02,es03
      # - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      # - bootstrap.memory_lock=true
      # - xpack.security.enabled=true
      # - xpack.security.http.ssl.enabled=true
      # - xpack.security.http.ssl.key=certs/es01/es01.key
      # - xpack.security.http.ssl.certificate=certs/es01/es01.crt
      # - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      # - xpack.security.http.ssl.verification_mode=certificate
      # - xpack.security.transport.ssl.enabled=true
      # - xpack.security.transport.ssl.key=certs/es01/es01.key
      # - xpack.security.transport.ssl.certificate=certs/es01/es01.crt
      # - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      # - xpack.security.transport.ssl.verification_mode=certificate
      # - xpack.license.self_generated.type=${LICENSE}
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    # depends_on:
    #   es01:
    #     condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    # volumes:
    #   - certs:/usr/share/kibana/config/certs
    #   - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://elastic:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      # - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    mem_limit: ${MEM_LIMIT}
    # healthcheck:
    #   test:
    #     [
    #       "CMD-SHELL",
    #       "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
    #     ]
    #   interval: 10s
    #   timeout: 10s
    #   retries: 120

# volumes:
#   certs:
#     driver: local
#   esdata01:
#     driver: local
#   kibanadata:
#     driver: local